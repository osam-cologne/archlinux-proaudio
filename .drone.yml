---
kind: pipeline
type: docker
name: Build and check

platform:
  os: linux
  arch: amd64

steps:
  - name: Remove unmodified packages
    image: alpine/git
    failure: ignore  # build all packages if none are modified
    commands:
      - if git diff --quiet origin/${DRONE_TARGET_BRANCH:-master} ./packages;
        then false; else true; fi
      - for PKG in ./packages/*; do
        git diff --quiet origin/${DRONE_TARGET_BRANCH:-master} "$PKG" &&
        echo rm -rf "$PKG" && rm -rf "$PKG" || true;
        done
    when:
      ref:
        include:
          - refs/pull/**

  - name: Pacman cache
    image: archlinux/archlinux:base-devel
    volumes:
      - name: pkgcache
        path: /var/cache/pacman/pkg
      - name: pkgdb
        path: /var/lib/pacman/sync
    environment:
      PKGDEST: /tmp/build
      LOGDEST: /tmp/build
      SRCDEST: /tmp/build
      SRCPKGDEST: /tmp/build
      BUILDDIR: /tmp/build
    commands:
      - pacman -Syyu --noconfirm namcap diffoscope
      - "echo '%nobody ALL=(ALL:ALL) NOPASSWD: ALL' > /etc/sudoers.d/sudo-build"
      - sudo -u nobody --preserve-env=PKGDEST,LOGDEST,SRCDEST,SRCPKGDEST,BUILDDIR,PACKAGE ./tools/syncdeps-all.sh
    depends_on:
      - Remove unmodified packages

  - name: Analyze build scripts
    image: archlinux/archlinux:base-devel
    volumes:
      - name: pkgcache
        path: /var/cache/pacman/pkg
      - name: pkgdb
        path: /var/lib/pacman/sync
    commands:
      - pacman -S --noconfirm namcap >/dev/null
      - if [ -n "$PACKAGE" ]; then namcap packages/$PACKAGE/PKGBUILD; else namcap packages/*/PKGBUILD; fi
    depends_on:
      - Pacman cache

  - name: Build packages
    image: archlinux/archlinux:base-devel
    volumes:
      - name: pkgcache
        path: /var/cache/pacman/pkg
      - name: pkgdb
        path: /var/lib/pacman/sync
    environment:
      PKGDEST: /drone/src/out1
      LOGDEST: /drone/src/out1
      SRCDEST: /tmp/build
      SRCPKGDEST: /tmp/build
      BUILDDIR: /tmp/build
      PACKAGER: 'OSAMC <https://github.com/osam-cologne/archlinux-proaudio>'
    commands:
      - export SOURCE_DATE_EPOCH=${DRONE_BUILD_CREATED:-$DRONE_BUILD_STARTED}
      - rm -rf out1  # cleanup, needed for local testing
      - mkdir -p out1 && chmod -R a+w out1
      - "echo '%nobody ALL=(ALL:ALL) NOPASSWD: ALL' > /etc/sudoers.d/sudo-build"
      - pacman -Su --noconfirm
      - sudo -u nobody --preserve-env=PACKAGER,PKGDEST,LOGDEST,SRCDEST,SRCPKGDEST,BUILDDIR,PACKAGE,SOURCE_DATE_EPOCH ./tools/clean-build-all.sh
    depends_on:
      - Pacman cache

  - name: List built packages
    image: alpine
    commands:
      - ls -1 out1/
    depends_on:
      - Build packages
    when:
      status:
        - success
        - failure

  - name: Analyze built packages
    image: archlinux/archlinux:base-devel
    volumes:
      - name: pkgcache
        path: /var/cache/pacman/pkg
      - name: pkgdb
        path: /var/lib/pacman/sync
    commands:
      - pacman -S --noconfirm namcap >/dev/null
      - namcap out1/*.pkg.tar.zst
    depends_on:
      - Build packages
    when:
      status:
        - success
        - failure

  - name: Reproduce packages
    image: archlinux/archlinux:base-devel
    volumes:
      - name: pkgcache
        path: /var/cache/pacman/pkg
      - name: pkgdb
        path: /var/lib/pacman/sync
    environment:
      PKGDEST: /drone/src/out2
      LOGDEST: /drone/src/out2
      SRCDEST: /tmp/build
      SRCPKGDEST: /tmp/build
      BUILDDIR: /tmp/build
      PACKAGER: 'OSAMC <https://github.com/osam-cologne/archlinux-proaudio>'
    commands:
      - sleep 9  # backoff to prevent false positives
      - export SOURCE_DATE_EPOCH=${DRONE_BUILD_CREATED:-$DRONE_BUILD_STARTED}
      - rm -rf out2  # cleanup, needed for local testing
      - mkdir -p out2 && chmod -R a+w out2
      - "echo '%nobody ALL=(ALL:ALL) NOPASSWD: ALL' > /etc/sudoers.d/sudo-build"
      - pacman -Su --noconfirm
      - sudo -u nobody --preserve-env=PACKAGER,PKGDEST,LOGDEST,SRCDEST,SRCPKGDEST,BUILDDIR,PACKAGE,SOURCE_DATE_EPOCH ./tools/clean-build-all.sh
    depends_on:
      - Pacman cache

  - name: Check reproduced checksums
    image: alpine
    commands:
      - rm -rf out.SHA512  # cleanup, needed for local testing
      - cd out1 && sha512sum *.pkg.tar.zst > ../out.SHA512
      - cd ../out2 && sha512sum -c ../out.SHA512
    depends_on:
      - Build packages
      - Reproduce packages
    when:
      status:
        - success
        - failure

  - name: Analyze reproduced packages
    image: archlinux/archlinux:base-devel
    volumes:
      - name: pkgcache
        path: /var/cache/pacman/pkg
      - name: pkgdb
        path: /var/lib/pacman/sync
    commands:
      - pacman -S --noconfirm diffoscope >/dev/null
      - cd out2
      - for PKG in *.pkg.tar.zst; do diffoscope ../out1/$PKG $PKG; done
    depends_on:
      - Build packages
      - Reproduce packages
    when:
      status:
        - success
        - failure

  - name: Sign packages
    image: plugins/gpgsign
    settings:
      key:
        from_secret: pkgsignkey
      passphrase:
        from_secret: pkgsignkey-pass
      files:
        - out1/*.pkg.tar.zst
      armor: false
      detach_sign: true
    depends_on:
      - Build packages
    when:
      ref:
        include:
          - refs/heads/master

  - name: Create db
    image: archlinux/archlinux:base-devel
    commands:
      - cd out1
      - repo-add proaudio.db.tar.gz *.pkg.tar.zst
    depends_on:
      - Sign packages
    when:
      ref:
        include:
          - refs/heads/master

  - name: Publish
    image: appleboy/drone-scp
    settings:
      host: arch.osamc.de
      user: aiwahpoo
      key:
        from_secret: ssh-key
      source: out1
      target: /var/www/virtual/aiwahpoo/html/proaudio/x86_64
      strip_components: 1
      overwrite: true
    depends_on:
      - Create db
    when:
      ref:
        include:
          - refs/heads/master

# use a shared pacman cache to clean up successive package installs
volumes:
  - name: pkgcache
    temp: {}
  - name: pkgdb
    temp: {}

trigger:
  ref:
    include:
      - refs/heads/master
      - refs/pull/**
      - refs/tags/**

---
kind: pipeline
type: docker
name: Build arm64

# makepkg -A will attempt building even if aarch64 is missing in PKGBUILD

platform:
  os: linux
  arch: arm64

steps:
  - name: Remove unmodified packages
    image: alpine/git
    failure: ignore  # build all packages if none are modified
    commands:
      - if git diff --quiet origin/${DRONE_TARGET_BRANCH:-master} ./packages;
        then false; else true; fi
      - for PKG in ./packages/*; do
        git diff --quiet origin/${DRONE_TARGET_BRANCH:-master} "$PKG" &&
        echo rm -rf "$PKG" && rm -rf "$PKG" || true;
        done
    when:
      ref:
        include:
          - refs/pull/**

  - name: Build packages
    image: agners/archlinuxarm
    failure: ignore  # arm64 is not critical for now
    environment:
      PKGDEST: /drone/src/out
      LOGDEST: /drone/src/out
      SRCDEST: /tmp/build
      SRCPKGDEST: /tmp/build
      BUILDDIR: /tmp/build
      PACKAGER: 'OSAMC <https://github.com/osam-cologne/archlinux-proaudio>'
    commands:
      - export SOURCE_DATE_EPOCH=${DRONE_BUILD_CREATED:-$DRONE_BUILD_STARTED}
      - pacman -Syyu --noconfirm
      - pacman -S --noconfirm base-devel
      - mkdir -p out
      - chmod -R a+w out
      - "echo '%nobody ALL=(ALL:ALL) NOPASSWD: ALL' > /etc/sudoers.d/sudo-build"
      - sudo -u nobody --preserve-env=PACKAGER,PKGDEST,LOGDEST,SRCDEST,SRCPKGDEST,BUILDDIR,PACKAGE,SOURCE_DATE_EPOCH ./tools/clean-build-all.sh -A
    depends_on:
      - Remove unmodified packages

  - name: List built packages
    image: alpine
    commands:
      - ls -1 out/
    depends_on:
      - Build packages
    when:
      status:
        - success
        - failure

  - name: Sign packages
    image: plugins/gpgsign
    settings:
      key:
        from_secret: pkgsignkey
      passphrase:
        from_secret: pkgsignkey-pass
      files:
        - out/*.pkg.tar.xz
      armor: false
      detach_sign: true
    depends_on:
      - Build packages
    when:
      #ref:
      #  include:
      #    - refs/heads/master
      status:
        - success
        - failure

  - name: Create db
    image: agners/archlinuxarm
    commands:
      - cd out
      - repo-add proaudio.db.tar.gz *.pkg.tar.xz
    depends_on:
      - Sign packages
    #when:
    #  ref:
    #    include:
    #      - refs/heads/master

  - name: Publish
    image: appleboy/drone-scp
    settings:
      host: arch.osamc.de
      user: aiwahpoo
      key:
        from_secret: ssh-key
      source: out
      target: /var/www/virtual/aiwahpoo/html/proaudio/aarch64
      strip_components: 1
      overwrite: true
    depends_on:
      - Create db
    #when:
    #  ref:
    #    include:
    #      - refs/heads/master

trigger:
  ref:
    include:
      - refs/heads/master
      - refs/pull/**
      - refs/tags/**
