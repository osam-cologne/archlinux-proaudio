---
kind: pipeline
type: docker
name: Build and check

platform:
  os: linux
  arch: amd64

steps:
  - name: Prepare
    image: archlinux/archlinux:base-devel
    volumes:
      - name: pkgcache
        path: /var/cache/pacman/pkg
      - name: pkgdb
        path: /var/lib/pacman/sync
    commands:
      - source tools/build-env.sh
      - run_nobody tools/prepare-build.sh namcap diffoscope openssh

  - name: Analyze build scripts
    image: archlinux/archlinux:base-devel
    volumes:
      - name: pkgcache
        path: /var/cache/pacman/pkg
      - name: pkgdb
        path: /var/lib/pacman/sync
    commands:
      - pacman -S --noconfirm namcap >/dev/null
      - if [ -n "$PACKAGE" ]; then
        namcap packages/$PACKAGE/PKGBUILD;
        else namcap packages/*/PKGBUILD; fi
    depends_on:
      - Prepare

  - name: Build packages
    image: archlinux/archlinux:base-devel
    volumes:
      - name: pkgcache
        path: /var/cache/pacman/pkg
      - name: pkgdb
        path: /var/lib/pacman/sync
    environment:
      SRCDEST: /drone/src/.tmp/cache/srcdest
      PKGDEST: /drone/src/out
    commands:
      - source tools/build-env.sh
      - pacman -Su --noconfirm
      - run_nobody tools/clean-build-all.sh
      - if ls -1 out/*-debug-*$PKGEXT 2>/dev/null 1>&2; then
        mv out/*-debug-*$PKGEXT out-debug/; fi
    depends_on:
      - Prepare

  - name: List built packages
    image: alpine:3.15
    commands:
      - ls -1 out/
      - ls -1 out-debug/
    depends_on:
      - Build packages
    when:
      status:
        - success
        - failure

  - name: Analyze built packages
    image: archlinux/archlinux:base-devel
    volumes:
      - name: pkgcache
        path: /var/cache/pacman/pkg
      - name: pkgdb
        path: /var/lib/pacman/sync
    commands:
      - source tools/build-env.sh
      - pacman -S --noconfirm namcap >/dev/null
      - cd out
      - if ls -1 *$PKGEXT 2>/dev/null 1>&2; then namcap *$PKGEXT; fi
    depends_on:
      - Build packages
    when:
      status:
        - success
        - failure

  - name: Reproduce packages
    image: archlinux/archlinux:base-devel
    volumes:
      - name: pkgcache
        path: /var/cache/pacman/pkg
      - name: pkgdb
        path: /var/lib/pacman/sync
    environment:
      SRCDEST: /drone/src/.tmp/cache/srcdest
      PKGDEST: /drone/src/out2
    commands:
      - sleep 9  # backoff to prevent false positives
      - source ./tools/build-env.sh
      - pacman -Su --noconfirm
      - run_nobody tools/clean-build-all.sh
    depends_on:
      - Prepare

  - name: Check reproduced checksums
    image: alpine:3.15
    commands:
      - cd out
      - (if ls -1 *.pkg.tar.zst 2>/dev/null 1>&2; then
        sha512sum *.pkg.tar.zst; fi) > ../out.SHA512
      - cd ../out2
      - if [[ -s ../out.SHA512 ]]; then sha512sum -c ../out.SHA512; fi
    depends_on:
      - Build packages
      - Reproduce packages
    when:
      status:
        - success
        - failure

  - name: Analyze reproduced packages
    image: archlinux/archlinux:base-devel
    volumes:
      - name: pkgcache
        path: /var/cache/pacman/pkg
      - name: pkgdb
        path: /var/lib/pacman/sync
    commands:
      - source tools/build-env.sh
      - pacman -S --noconfirm diffoscope >/dev/null
      - cd out && shopt -s nullglob
      - for PKG in *$PKGEXT; do diffoscope $PKG ../out2/$PKG; done
    depends_on:
      - Build packages
      - Reproduce packages
    when:
      status:
        - success
        - failure

  - name: Sign packages
    image: plugins/gpgsign
    pull: if-not-exists
    settings:
      key:
        from_secret: pkgsignkey
      passphrase:
        from_secret: pkgsignkey-pass
      files:
        - out/*.pkg.tar.*
        - out-debug/*.pkg.tar.*
      armor: false
      detach_sign: true
    depends_on:
      - Build packages
    when:
      ref:
        include:
          - refs/heads/master

  - name: Update db
    image: archlinux/archlinux:base-devel
    volumes:
      - name: pkgdb
        path: /var/lib/pacman/sync
    commands:
      - source tools/build-env.sh
      - tools/update-db.sh
    depends_on:
      - Sign packages
    when:
      ref:
        include:
          - refs/heads/master

  - name: Publish
    image: appleboy/drone-scp
    pull: if-not-exists
    settings:
      host: arch.osamc.de
      user: aiwahpoo
      key:
        from_secret: ssh-key
      source: out
      target: /var/www/virtual/aiwahpoo/html/proaudio/x86_64
      strip_components: 1
      overwrite: true
    depends_on:
      - Update db
    when:
      ref:
        include:
          - refs/heads/master

  - name: Publish debug packages
    image: appleboy/drone-scp
    pull: if-not-exists
    settings:
      host: arch.osamc.de
      user: aiwahpoo
      key:
        from_secret: ssh-key
      source: out-debug
      target: /var/www/virtual/aiwahpoo/html/debug-archive
      strip_components: 1
      overwrite: true
    depends_on:
      - Sign packages
    when:
      ref:
        include:
          - refs/heads/master

  - name: Push to AUR
    image: archlinux/archlinux:base-devel
    volumes:
      - name: pkgcache
        path: /var/cache/pacman/pkg
      - name: pkgdb
        path: /var/lib/pacman/sync
    environment:
      SSH_KEY:
        from_secret: ssh-key
    commands:
      - source tools/build-env.sh
      - echo "$${SSH_KEY}" > aur/.ssh/id_osamc
      - cp -a aur/.ssh /root && chmod 600 /root/.ssh/*
      - tools/push-aur.sh
      - rm -rf /root/.ssh
    depends_on:
      - Build packages
    when:
      ref:
        include:
          - refs/heads/master

# use a shared pacman cache to speed up successive package installs
volumes:
  - name: pkgcache
    temp: {}
  - name: pkgdb
    temp: {}

trigger:
  ref:
    include:
      - refs/heads/master
      - refs/pull/**

---
kind: pipeline
type: docker
name: Build arm64

# makepkg -A will attempt building even if aarch64 is missing in PKGBUILD

platform:
  os: linux
  arch: arm64

steps:
  - name: Prepare
    image: lopsided/archlinux-arm64v8:devel
    volumes:
      - name: pkgcache
        path: /var/cache/pacman/pkg
      - name: pkgdb
        path: /var/lib/pacman/sync
    failure: ignore  # arm64 is not critical for now
    environment:
      PKGDEST: /drone/src/out
      MAKEPKG_ARGS: -A
    commands:
      - source tools/build-env.sh
      - run_nobody tools/prepare-build.sh

  - name: Build packages
    image: lopsided/archlinux-arm64v8:devel
    volumes:
      - name: pkgcache
        path: /var/cache/pacman/pkg
      - name: pkgdb
        path: /var/lib/pacman/sync
    failure: ignore
    environment:
      PKGDEST: /drone/src/out
      MAKEPKG_ARGS: -A
    commands:
      - source tools/build-env.sh
      - run_nobody tools/clean-build-all.sh
      - if ls -1 out/*-debug-*$PKGEXT 2>/dev/null 1>&2; then
        mv out/*-debug-*$PKGEXT out-debug/; fi
    depends_on:
      - Prepare

  - name: List built packages
    image: alpine:3.15
    commands:
      - ls -1 out/
      - ls -1 out-debug/
    depends_on:
      - Build packages
    when:
      status:
        - success
        - failure

  - name: Sign packages
    image: plugins/gpgsign
    pull: if-not-exists
    settings:
      key:
        from_secret: pkgsignkey
      passphrase:
        from_secret: pkgsignkey-pass
      files:
        - out/*.pkg.tar.*
        - out-debug/*.pkg.tar.*
      armor: false
      detach_sign: true
    depends_on:
      - Build packages
    when:
      ref:
        include:
          - refs/heads/master
      status:
        - success
        - failure

  - name: Update db
    image: lopsided/archlinux-arm64v8:devel
    commands:
      - source tools/build-env.sh
      - tools/update-db.sh
    depends_on:
      - Sign packages
    when:
      ref:
        include:
          - refs/heads/master

  - name: Publish
    image: appleboy/drone-scp
    pull: if-not-exists
    settings:
      host: arch.osamc.de
      user: aiwahpoo
      key:
        from_secret: ssh-key
      source: out
      target: /var/www/virtual/aiwahpoo/html/proaudio/aarch64
      strip_components: 1
      overwrite: true
    depends_on:
      - Update db
    when:
      ref:
        include:
          - refs/heads/master

  - name: Publish debug packages
    image: appleboy/drone-scp
    pull: if-not-exists
    settings:
      host: arch.osamc.de
      user: aiwahpoo
      key:
        from_secret: ssh-key
      source: out-debug
      target: /var/www/virtual/aiwahpoo/html/debug-archive
      strip_components: 1
      overwrite: true
    depends_on:
      - Sign packages
    when:
      ref:
        include:
          - refs/heads/master

# use a shared pacman cache to speed up successive package installs
volumes:
  - name: pkgcache
    temp: {}
  - name: pkgdb
    temp: {}

trigger:
  ref:
    include:
      - refs/heads/master
      - refs/pull/**

---
kind: pipeline
type: docker
name: Website

steps:
  - name: Fetch databases
    image: archlinux/archlinux:base-devel
    commands:
      - for ARCH in x86_64 aarch64; do
        mkdir -p .tmp/db/$ARCH &&
        curl https://arch.osamc.de/proaudio/$ARCH/proaudio.files.tar.gz |
        bsdtar -xC .tmp/db/$ARCH; done

  - name: Build site
    image: klakegg/hugo:busybox
    commands:
      - hugo

  - name: Publish
    image: appleboy/drone-scp
    pull: if-not-exists
    settings:
      host: arch.osamc.de
      user: aiwahpoo
      key:
        from_secret: ssh-key
      source: .tmp/public
      target: /var/www/virtual/aiwahpoo/html
      strip_components: 2
      overwrite: true
    when:
      ref:
        include:
          - refs/heads/master

depends_on:
  - Build and check
  - Build arm64

trigger:
  ref:
    include:
      - refs/heads/master
      - refs/pull/**

when:
  status:
    - success
    - failure
