# Maintainer: OSAMC <https://github.com/osam-cologne/archlinux-proaudio>
# Contributor: Phil A. <flying-sheep@web.de>
# Contributor: David Runge <dave@sleepmap.de>
# Contributor: Adrain Sinclair <adrian at adrusi dot com>
# Contributor: Miroslav Koškár <http://mkoskar.com/>
# Contributor: Florian Hülsmann <fh@cbix.de>

pkgname=vcvrack
pkgver=2.1.0
pkgrel=2
pkgdesc='Open-source Eurorack modular synthesizer simulator'
url='https://vcvrack.com/'
license=(custom CCPL GPL3)
arch=(x86_64)
_plugin_name=Fundamental
_plugin_ver=2.0.3
_plugin_pkg=${pkgname}-${_plugin_name,,}
makedepends=(curl glew glfw-x11 jack jansson
  libarchive libpulse openssl rtaudio
  rtmidi speexdsp zstd git gendesk jq)
provides=($_plugin_pkg)
conflicts=($_plugin_pkg)
groups=(pro-audio)
source=(
  "${pkgname}-${pkgver}::git+https://github.com/vcvrack/rack.git#tag=v$pkgver"
  'git+https://github.com/VCVRack/nanovg.git'
  'git+https://github.com/memononen/nanosvg.git'
  'git+https://github.com/AndrewBelt/osdialog.git'
  'git+https://github.com/VCVRack/oui-blendish.git'
  'git+https://bitbucket.org/j_norberg/fuzzysearchdatabase.git'
  'git+https://github.com/gulrak/filesystem.git'
  'git+https://bitbucket.org/jpommier/pffft.git'
  "${_plugin_pkg}-${_plugin_ver}.tar.gz::https://github.com/VCVRack/${_plugin_name}/archive/v${_plugin_ver}.tar.gz"
  'plugins.patch'
  'vcvrack.sh'
  'profile.sh'
)
sha512sums=('SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            '285b7e014ff40f214d866487d70f5e1f69c9e8b4c14727be0635451598d107cde9bb24e6f08d2e307b629d28851ee6b86e6e7c630a838359385f96280e249c03'
            '6f441aff7ec763651068482771c9ac155caab9cb1e2193c1f6fabfa28f1b03014f6eb8a85a02d263e6f2e7c8eb31a3a368151f957f40ee376a7a0bce9a79d98f'
            'f12dc46cb96e572c5ff540237205bddefc3990d94f0bc80a07601b6a10a6700b2c82afe8a0fc6d132f74f5bf12c6959b1cfe098d0774d8a3900ab2e1886c9fe7'
            '9bb95450080fd19ce2306fbe11845b8b0ba3dfd0daac5ed5881bb1ebed41e240f092b596c9b856289c0945ef8b2ce0ea8c6de39ccc56ff2863c71b36d75a1848')
_submodule_deps=(nanovg nanosvg osdialog oui-blendish fuzzysearchdatabase filesystem pffft)

prepare() {
  cd "${pkgname}-$pkgver"
  for _mod in "${_submodule_deps[@]}"; do
    git submodule init "dep/$_mod"
    git config "submodule.dep/${_mod}.url" "${srcdir}/$_mod"
    git submodule update "dep/$_mod"
  done

  # add target to only build included dependencies
  echo 'includes: $(nanovg) $(nanosvg) $(osdialog) $(oui-blendish) $(fuzzysearchdatabase) $(ghcfilesystem) $(pffft)' >> dep/Makefile

  # recent changes to rtaudio.cpp require an unrelease version of rtaudio
  git checkout 6ae7fe05216950e461a27e05e8b9de53ccf8247b src/rtaudio.cpp

  # support building plugins and loading system-wide plugins
  patch -p1 -i ../plugins.patch

  gendesk -f -n \
    --pkgname $pkgname \
    --name "VCV Rack" \
    --exec Rack \
    --pkgdesc "$pkgdesc" \
    --genericname "Virtual modular synthesizer" \
    --categories "AudioVideo;Audio"
}

build() {
  cd "$pkgname-$pkgver"
  _ldflags="-shared -ldl \
    $(pkg-config --libs glew \
    glfw3 jansson libcurl openssl \
    libarchive libzstd speexdsp \
    samplerate rtmidi rtaudio gl \
    alsa jack libpulse libpulse-simple)"
  VERSION=$pkgver make -C dep includes
  VERSION=$pkgver make LDFLAGS+="$_ldflags" STANDALONE_LDFLAGS=""
  cd ../${_plugin_name}-$_plugin_ver
  VERSION=$_plugin_ver RACK_DIR=../${pkgname}-$pkgver make dist LDFLAGS+="$_ldflags"
}

package() {
  depends=(
    libcurl.so
    libGLEW.so
    # does not start with glfw-wayland
    glfw-x11
    jansson
    libarchive.so
    openssl
    librtaudio.so
    librtmidi.so
    speexdsp
    zenity
  )
  cd "${pkgname}-$pkgver"
  install -vDm755 Rack -t "$pkgdir"/usr/lib/${pkgname}
  install -vDm755 libRack.so -t "$pkgdir"/usr/lib
  install -vDm755 "$srcdir"/vcvrack.sh "$pkgdir"/usr/bin/Rack
  install -vDm644 -t "$pkgdir"/usr/lib/$pkgname template.vcv
  install -vDm644 -t "$pkgdir"/usr/lib/$pkgname Core.json
  install -vDm644 -t "$pkgdir"/usr/lib/$pkgname cacert.pem

  # resources
  cp -dr --preserve=mode res -t "$pkgdir"/usr/lib/$pkgname

  # headers (required for plugins)
  for _path in {app,dsp,engine,plugin,simd,ui,widget,window}; do
    install -vDm644 include/${_path}/* \
      -t "$pkgdir"/usr/include/${pkgname}/${_path}/
  done
  install -vDm644 include/*.{h,hpp} -t "$pkgdir"/usr/include/${pkgname}/
  install -vDm644 dep/include/*.h -t "$pkgdir"/usr/include/${pkgname}/dep
  # Makefile snippets required for plugins
  install -vDm644 {arch,compile,dep,plugin}.mk -t "$pkgdir"/usr/share/$pkgname

  # xdg desktop integration
  install -vDm644 ${pkgname}.desktop -t "$pkgdir"/usr/share/applications/
  install -vDm644 res/icon.png "$pkgdir"/usr/share/pixmaps/${pkgname}.png
  # licenses
  install -vDm644 LICENSE.md -t "$pkgdir"/usr/share/licenses/$pkgname

  # Fundamental plugin
  cd ../${_plugin_name}-$_plugin_ver
  install -d "$pkgdir"/usr/lib/${pkgname}/plugins
  cp -a dist/$_plugin_name -t "$pkgdir"/usr/lib/${pkgname}/plugins/

  cd ..
  # RACK_DIR environment variable
  install -vDm644 profile.sh "$pkgdir"/etc/profile.d/vcvrack.sh
}
