# Maintainer: OSAMC <https://github.com/osam-cologne/archlinux-proaudio>
# Contributor: Phil A. <flying-sheep@web.de>
# Contributor: David Runge <dave@sleepmap.de>
# Contributor: Adrain Sinclair <adrian at adrusi dot com>
# Contributor: Miroslav Koškár <http://mkoskar.com/>
# Contributor: Florian Hülsmann <fh@cbix.de>

_name=Rack
pkgname=vcvrack
pkgver=2.6.0
pkgrel=6
pkgdesc='Open-source Eurorack modular synthesizer simulator'
url='https://vcvrack.com/'
license=(LicenseRef-custom GPL-3.0-or-later)
arch=(aarch64 x86_64)
_plugin_name=Fundamental
_plugin_ver=2.6.1
_plugin_pkg=$pkgname-${_plugin_name,,}
_libsamplerate_ver=0.1.9
depends=(glfw jansson)
makedepends=(alsa-lib autoconf cmake curl ghc-filesystem git glew jack jq libarchive libpulse
  libxrandr nanosvg openssl rtmidi simde speexdsp zstd)
provides=("$_plugin_pkg=$_plugin_ver" vcvrack-sdk)
conflicts=($_plugin_pkg)
groups=(pro-audio)
source=(
  "git+https://github.com/VCVRack/$_name#tag=v$pkgver"
  'git+https://bitbucket.org/j_norberg/fuzzysearchdatabase'
  'git+https://github.com/VCVRack/nanovg'
  'git+https://github.com/AndrewBelt/osdialog'
  'git+https://github.com/VCVRack/oui-blendish'
  'git+https://bitbucket.org/jpommier/pffft'
  'git+https://github.com/VCVRack/rtaudio'
  'git+https://github.com/codeplea/tinyexpr'
  "git+https://github.com/libsndfile/libsamplerate#tag=$_libsamplerate_ver"
  "git+https://github.com/VCVRack/$_plugin_name#tag=v$_plugin_ver"
  'plugins.patch'
  'wayland.patch'
  'wmclass.patch'
  'vcvrack.sh'
  'vcvrack.desktop'
  'vcvrack.xml'
  'profile.sh'
  'trademark.eml'
)
sha256sums=('8edf15caed42cc69037e0424bfb574bb9e12aa28c2887be9022fb6c91d571848'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'c80f10c74848d15d9499ff602ba1b10fcfc77d87f5f578ecc4378590ef533b87'
            '4ca39ba45cd1a365ccc081f479a040178eac16d7d8b51f6fa49ff64b790c1d50'
            '3ad0ea63ce2d5bf62b27e7b51a6d098040435636939d36a584a9b609578a9c9e'
            'd3bb2bfa0378df7787db001388df4c6956790b3e6abd7d8be0a7ef0c54c386ac'
            'f1abd73a4de8a97328ff0111fb59ab9f0bde42b2b8f0d2a2ee7fb964e47dbe5e'
            '5d30bfcce54219d5b95f1cafebae64503fbf4a46d10432c1e9a3c5cd78977096'
            '50387308a3e93c35c26686c6268e6d6e0a4e4a959c62f7d57b0e02cfeb0de814'
            '9b3fe6dd26f8c82925e6b9de3edf71d23438f46a2ffd3fc3ae087006d1a29f0d'
            'e1da6ccf04bae3a2101151fec7ddd32e48ff92b0a1146b559fd3221c778d521f'
            '1159629aa90abb7c972c0f630d55d018b88a6b3bc3ff0bb9466cc06982f38641')

prepare() {
  cd $_name
  # setup submodules
  for _module in fuzzysearchdatabase nanovg osdialog oui-blendish pffft tinyexpr; do
    git submodule init dep/$_module
    git config submodule.dep/$_module.url "$srcdir"/$_module
  done
  # original submodule commit was removed by rebase
  git submodule update --init -f dep/rtaudio
  git -c protocol.file.allow=always submodule update

  # libsamplerate needs static linking for some modules to load
  ln -sf "$srcdir"/libsamplerate dep/libsamplerate-$_libsamplerate_ver

  # support building plugins and loading system-wide plugins
  patch -p1 -i ../plugins.patch
  # set proper window manager class
  patch -p1 -i ../wmclass.patch
  # fix for wayland
  patch -p1 -i ../wayland.patch
}

build() {
  cd $_name
  # build deps
  autoreconf -f -i dep/libsamplerate-$_libsamplerate_ver
  _dep_targets=(
    include/{nanovg.h,blendish.h,osdialog.h,pffft.h,tinyexpr.h,FuzzySearchDatabase.hpp}
    lib/lib{samplerate,rtaudio}.a
  )
  make -C dep "${_dep_targets[@]}"
  # build Rack
  _ldflags=(-Wl,--whole-archive
    dep/lib/lib{rtaudio,samplerate}.a
    -Wl,--no-whole-archive
    -shared -ldl
    # fixes https://github.com/osam-cologne/archlinux-proaudio/issues/544
    -static-libstdc++
    # dynamically linked libs
    $(pkg-config --libs glew \
    glfw3 jansson libcurl openssl \
    libarchive libzstd speexdsp \
    rtmidi alsa jack libpulse libpulse-simple))
  # build plugin
  VERSION=$pkgver make LDFLAGS+="${_ldflags[*]}" STANDALONE_LDFLAGS="$LDFLAGS"
  cd ../$_plugin_name-$_plugin_ver
  VERSION=$_plugin_ver RACK_DIR=../$_name make dist
}

package() {
  depends+=(libcurl.so libGLEW.so libarchive.so libcrypto.so librtmidi.so libspeexdsp.so zenity)
  cd $_name
  install -vDm755 Rack -t "$pkgdir"/usr/lib/$pkgname
  install -vDm755 libRack.so -t "$pkgdir"/usr/lib
  install -vDm755 "$srcdir"/vcvrack.sh "$pkgdir"/usr/bin/$pkgname
  install -vDm644 template.vcv Core.json cacert.pem -t "$pkgdir"/usr/lib/$pkgname

  # resources
  cp -dr --preserve=mode res -t "$pkgdir"/usr/lib/$pkgname

  # headers (required for plugins)
  for _path in {app,dsp,engine,plugin,simd,ui,widget,window}; do
    install -vDm644 include/$_path/* \
      -t "$pkgdir"/usr/include/$pkgname/$_path
  done
  install -vDm644 include/*.hpp -t "$pkgdir"/usr/include/$pkgname
  install -vDm644 dep/include/*.h -t "$pkgdir"/usr/include/$pkgname/dep
  # Makefile snippets required for plugins
  install -vDm644 {arch,compile,dep,plugin}.mk -t "$pkgdir"/usr/share/$pkgname

  # xdg desktop integration
  install -vDm644 "$srcdir"/$pkgname.desktop -t "$pkgdir"/usr/share/applications
  install -vDm644 "$srcdir"/$pkgname.xml -t "$pkgdir"/usr/share/mime/packages
  install -vDm644 res/icon.png "$pkgdir"/usr/share/pixmaps/$pkgname.png
  # licenses
  install -vDm644 LICENSE.md "$srcdir"/trademark.eml -t "$pkgdir"/usr/share/licenses/$pkgname

  # Fundamental plugin
  cd ../$_plugin_name-$_plugin_ver
  install -d "$pkgdir"/usr/lib/$pkgname/plugins
  cp -a dist/$_plugin_name -t "$pkgdir"/usr/lib/$pkgname/plugins

  # RACK_DIR environment variable
  install -vDm644 "$srcdir"/profile.sh "$pkgdir"/etc/profile.d/$pkgname.sh
}
